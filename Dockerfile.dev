FROM node:alpine

# set working directory
WORKDIR '/app'                            

# the package.json to working directory
COPY package.json . 
RUN npm install

# copy everything to the working directory
# we dont need it because in the docker-compose file, we reference the app foler in the container to the host folder
# but we keep it because we may use this file without docker-compose or we reuse this file in other places
COPY . .

CMD ["npm", "run", "start"]








# command ------------------------------------
# --------------------------------------------

# 0668 - Creating the Dev Dockerfile
## docker build .                        ## we cant use this for docker file withd custom name, e.g. Dockerfile.dev (instead of Dockerfile)
## docker build -f Dockerfile.dev .      ## build docker image, -f => specify the name of hte docker file

# 0669 - Duplicating  Dependencies
## remove node_modules coz the dependency will be install in the Docker image

# 0671 Starting the container
## docker run CONTAINER_ID                        ## not working coz need to map the port
## docker run -p 3000:3000 CONTAINER_ID           ## not working too coz the recent change in create react app
## docker run -it -p 3000:3000 CONTAINER_ID       ## WORKING - start the container

# 0672-0674 Docker Volume
## docker run -it -p 3000:3000 -v $(pwd):/app caf6c2e35b4f      ## app folder in the container reference to the pwd in the host
                                                                ## Not working coz there is no node_module in the host so there is no node_module after referencing
## docker run -it -p 3000:3000 -v /app/node_modules -v $(pwd):/app caf6c2e35b4f
### -v /app/node_modules --> without ":" this directory doesnt have reference, this directory is a placeholder